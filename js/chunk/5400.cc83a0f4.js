"use strict";(self.webpackChunkbalm_ui=self.webpackChunkbalm_ui||[]).push([[5400],{65400:function(n,t,e){e.r(t);t.default='<pre><code class="language-html">&lt;ui-editor\n  ref=&quot;editor&quot;\n  v-model=&quot;decodeContent&quot;\n  placeholder=&quot;Compose an epic...&quot;\n  :toolbar=&quot;toolbar&quot;\n  :toolbar-handlers=&quot;toolbarHandlers&quot;\n  custom-image-handler\n  @file-change=&quot;onFileChange&quot;\n&gt;&lt;/ui-editor&gt;\n\n&lt;!-- Custom editor content preview --&gt;\n&lt;ui-dialog v-model=&quot;preview.show&quot; class=&quot;preview-dialog&quot;&gt;\n  &lt;ui-dialog-title&gt;\n    Preview\n    &lt;ui-icon-button\n      class=&quot;close&quot;\n      icon=&quot;close&quot;\n      @click=&quot;preview.show = false&quot;\n    &gt;&lt;/ui-icon-button&gt;\n  &lt;/ui-dialog-title&gt;\n  &lt;ui-dialog-content&gt;\n    &lt;ui-tabs\n      v-model=&quot;preview.type&quot;\n      :type=&quot;2&quot;\n      :items=&quot;[\n        {\n          text: &#39;Desktop&#39;,\n          icon: &#39;desktop_windows&#39;\n        },\n        {\n          text: &#39;Tablet&#39;,\n          icon: &#39;tablet&#39;\n        },\n        {\n          text: &#39;Mobile&#39;,\n          icon: &#39;phone_iphone&#39;\n        }\n      ]&quot;\n    &gt;&lt;/ui-tabs&gt;\n    &lt;div\n      v-shadow=&quot;4&quot;\n      class=&quot;preview-content&quot;\n      :style=&quot;previewStyle&quot;\n      v-html=&quot;preview.content&quot;\n    &gt;&lt;/div&gt;\n  &lt;/ui-dialog-content&gt;\n&lt;/ui-dialog&gt;\n</code></pre> <pre><code class="language-js">const toolbar = [\n  [\n    { header: [false, 1, 2, 3, 4, 5, 6] },\n    { font: [] },\n    { size: [] },\n    { lineheight: [] }\n  ],\n  [&#39;bold&#39;, &#39;italic&#39;, &#39;underline&#39;, { color: [] }, { background: [] }],\n  [\n    { align: &#39;&#39; },\n    { align: &#39;center&#39; },\n    { align: &#39;right&#39; },\n    { align: &#39;justify&#39; }\n  ],\n  [\n    { list: &#39;ordered&#39; },\n    { list: &#39;bullet&#39; },\n    { indent: &#39;+1&#39; },\n    { indent: &#39;-1&#39; },\n    &#39;blockquote&#39;,\n    &#39;emoji&#39;\n  ],\n  [&#39;link&#39;, &#39;image&#39;, &#39;video&#39;],\n  [&#39;strike&#39;, { script: &#39;super&#39; }, { script: &#39;sub&#39; }, &#39;divider&#39;],\n  [&#39;clean&#39;, &#39;undo&#39;, &#39;redo&#39;],\n  [&#39;preview&#39;] // custom\n];\n\nexport default {\n  data() {\n    return {\n      toolbar,\n      encodeContent: &#39;&#39;,\n      decodeContent: &#39;&#39;,\n      toolbarHandlers: {\n        preview: (quill, value) =&gt; {\n          this.preview.show = true;\n          this.preview.content = this.decodeContent;\n        }\n      },\n      preview: {\n        show: false,\n        type: 0,\n        content: &#39;&#39;\n      }\n    };\n  },\n  computed: {\n    previewStyle() {\n      let width;\n\n      switch (this.preview.type) {\n        case 1:\n          width = &#39;768px&#39;;\n          break;\n        case 2:\n          width = &#39;375px&#39;;\n          break;\n        default:\n          width = &#39;960px&#39;;\n      }\n\n      return { width };\n    }\n  },\n  mounted() {\n    setTimeout(() =&gt; {\n      if (this.$refs.editor) {\n        this.decodeContent = this.$refs.editor.decodeEmoji(\n          &#39;&lt;p&gt;Hello BalmUI [oo] and BalmJS :smile: !&lt;/p&gt;&#39;\n        );\n      }\n    }, 1);\n  },\n  methods: {\n    async onFileChange(file, insert) {\n      let { url } = await this.$http.post(&#39;/api/upload&#39;, { file });\n      insert(url);\n    },\n    onSubmit() {\n      this.encodeContent = this.$refs.editor.encodeEmoji(this.decodeContent);\n      // submit action...\n    }\n  }\n};\n</code></pre> '}}]);